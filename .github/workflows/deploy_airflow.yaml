name: Deploy Airflow to Azure

on:
  push:
    branches:
      - dev

env:
  IMAGE_NAME: airflow-custom
  IMAGE_TAG: latest_img
  ACR_NAME: acrairflowdevhealthcare
  ACR_LOGIN_SERVER: acrairflowdevhealthcare.azurecr.io
  RESOURCE_GROUP: healthcare_project
  CONTAINER_INSTANCE_NAME: airflow-container

jobs:
  terraform-deploy:
    name: Terraform Deploy Infrastructure
    runs-on: ubuntu-latest
    env:
      azure_client_id: ${{ secrets.AZURE_CLIENT_ID }}
      azure_client_secret: ${{ secrets.AZURE_CLIENT_SECRET }}
      azure_tenant_id: ${{ secrets.AZURE_TENANT_ID }}
      azure_subscription_id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
      acr_sp_username: ${{ secrets.ACR_SP_USERNAME }}
      acr_sp_password: ${{ secrets.ACR_SP_PASSWORD }}
      ACR_LOGIN_SERVER: ${{ secrets.ACR_LOGIN_SERVER }}
      ARM_CLIENT_ID: ${{ secrets.AZURE_CLIENT_ID }}
      ARM_CLIENT_SECRET: ${{ secrets.AZURE_CLIENT_SECRET }}
      ARM_TENANT_ID: ${{ secrets.AZURE_TENANT_ID }}
      ARM_SUBSCRIPTION_ID: ${{ secrets.AZURE_SUBSCRIPTION_ID }}

    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Azure Login
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      - name: Break Terraform state blob lease if any
        run: |
          az storage blob lease break \
            --account-name tfstate147025af \
            --container-name tfstate \
            --blob-name terraform.tfstate \
            --auth-mode login || echo "No lease to break"

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: 1.5.7

      - name: Terraform Init
        working-directory: terraform/dev/acr
        run: terraform init

      - name: Terraform Format Check
        working-directory: terraform/dev/acr
        run: terraform fmt -check

      - name: Terraform Validate
        working-directory: terraform/dev/acr
        run: terraform validate

      - name: Terraform Plan
        working-directory: terraform/dev/acr
        run: |
          terraform plan \
            -input=false \
            -lock-timeout=120s \
            -var-file=terraform.tfvars \
            -var="azure_credentials=${{ secrets.AZURE_CREDENTIALS_JSON }}" \
            -var="azure_client_id=${{ env.azure_client_id }}" \
            -var="azure_client_secret=${{ env.azure_client_secret }}" \
            -var="azure_tenant_id=${{ env.azure_tenant_id }}" \
            -var="azure_subscription_id=${{ env.azure_subscription_id }}" \
            -var="acr_sp_username=${{ env.acr_sp_username }}" \
            -var="acr_sp_password=${{ env.acr_sp_password }}" \
            -var="acr_login_server=${{ env.ACR_LOGIN_SERVER }}" \
            -var="image_tag=${{ env.IMAGE_TAG }}" \
            -out=tfplan

      - name: Terraform Apply
        if: github.ref == 'refs/heads/dev'
        working-directory: terraform/dev/acr
        run: |
          terraform apply \
            -input=false \
            -lock-timeout=120s \
            tfplan

  docker-build-push:
    name: Build and Push Docker Image
    needs: terraform-deploy
    runs-on: ubuntu-latest

    env:
      ACR_NAME: acrairflowdevhealthcare
      ACR_LOGIN_SERVER: acrairflowdevhealthcare.azurecr.io
      IMAGE_NAME: airflow-custom
      IMAGE_TAG: latest_img

    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Azure Login
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      - name: ACR Login
        run: az acr login --name ${{ env.ACR_NAME }}

      - name: Docker Build
        run: |
          docker build -t ${{ env.ACR_LOGIN_SERVER }}/${{ env.IMAGE_NAME }}:${{ env.IMAGE_TAG }} .

      - name: Docker Push
        run: |
          docker push ${{ env.ACR_LOGIN_SERVER }}/${{ env.IMAGE_NAME }}:${{ env.IMAGE_TAG }}

  terraform-redeploy:
    name: Terraform Re-Apply with New Image
    needs: docker-build-push
    if: github.event.head_commit.message != 'skip-infra'
    runs-on: ubuntu-latest
    env:
      azure_client_id: ${{ secrets.AZURE_CLIENT_ID }}
      azure_client_secret: ${{ secrets.AZURE_CLIENT_SECRET }}
      azure_tenant_id: ${{ secrets.AZURE_TENANT_ID }}
      azure_subscription_id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
      acr_sp_username: ${{ secrets.ACR_SP_USERNAME }}
      acr_sp_password: ${{ secrets.ACR_SP_PASSWORD }}
      ACR_LOGIN_SERVER: acrairflowdevhealthcare.azurecr.io
      IMAGE_TAG: latest_img

    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Azure Login
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      - name: Break Terraform state blob lease if any
        run: |
          az storage blob lease break \
            --account-name tfstate147025af \
            --container-name tfstate \
            --blob-name terraform.tfstate \
            --auth-mode login || echo "No lease to break"

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: 1.5.7

      - name: Terraform Init
        working-directory: terraform/dev/acr
        run: terraform init

      - name: Terraform Apply with Image Tag
        working-directory: terraform/dev/acr
        run: |
          terraform apply -lock-timeout=120s -auto-approve \
            -var-file=terraform.tfvars \
            -var="azure_client_id=${{ env.azure_client_id }}" \
            -var="azure_client_secret=${{ env.azure_client_secret }}" \
            -var="azure_tenant_id=${{ env.azure_tenant_id }}" \
            -var="azure_subscription_id=${{ env.azure_subscription_id }}" \
            -var="acr_sp_username=${{ env.acr_sp_username }}" \
            -var="acr_sp_password=${{ env.acr_sp_password }}" \
            -var="acr_login_server=${{ env.ACR_LOGIN_SERVER }}" \
            -var="image_tag=${{ env.IMAGE_TAG }}"
