name: Deploy Azure Function Infrastructure

on:
  push:
    branches:
      - dev
  workflow_dispatch:

jobs:
  terraform:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        env: [dev]

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: List terraform folder contents
        run: ls -la terraform/${{ matrix.env }}/infra

      - name: Azure Login 
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      - name: Export ARM environment variables for Terraform
        run: |
          echo "ARM_CLIENT_ID=${{ secrets.AZURE_CLIENT_ID }}" >> $GITHUB_ENV
          echo "ARM_CLIENT_SECRET=${{ secrets.AZURE_CLIENT_SECRET }}" >> $GITHUB_ENV
          echo "ARM_TENANT_ID=${{ secrets.AZURE_TENANT_ID }}" >> $GITHUB_ENV
          echo "ARM_SUBSCRIPTION_ID=${{ secrets.AZURE_SUBSCRIPTION_ID }}" >> $GITHUB_ENV

      - name: Export Terraform input variables (TF_VAR_*)
        run: |
          echo "TF_VAR_client_id=${{ secrets.AZURE_CLIENT_ID }}" >> $GITHUB_ENV
          echo "TF_VAR_client_secret=${{ secrets.AZURE_CLIENT_SECRET }}" >> $GITHUB_ENV
          echo "TF_VAR_tenant_id=${{ secrets.AZURE_TENANT_ID }}" >> $GITHUB_ENV
          echo "TF_VAR_subscription_id=${{ secrets.AZURE_SUBSCRIPTION_ID }}" >> $GITHUB_ENV

      - name: Break Terraform State Lease
        run: |
          az storage blob lease break \
            --account-name tfstate147025af \
            --container-name tfstate \
            --blob-name terraform.tfstate \
            --auth-mode login || echo "No lease to break"

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: 1.5.7

      - name: Terraform Init
        working-directory: terraform/${{ matrix.env }}/infra
        run: terraform init

      - name: Terraform Format Check
        working-directory: terraform/${{ matrix.env }}/infra
        run: terraform fmt -check

      - name: Terraform Validate
        working-directory: terraform/${{ matrix.env }}/infra
        run: terraform validate

      - name: Terraform Apply (Function Infra Only)
        if: ${{ github.ref == format('refs/heads/{0}', matrix.env) }}
        working-directory: terraform/${{ matrix.env }}/infra
        run: |
          terraform apply -auto-approve -var-file=terraform.tfvars \
            -target=azurerm_function_app.func \
            -target=azurerm_app_service_plan.func_plan \
            -target=azurerm_storage_account.func_storage

      - name: Install Azure Functions Core Tools
        run: sudo npm install -g azure-functions-core-tools@4 --unsafe-perm true

      - name: Publish Azure Function Code
        working-directory: function-code
        run: func azure functionapp publish process-file-func --python

      - name: Terraform Apply (Remaining Infra)
        if: ${{ github.ref == format('refs/heads/{0}', matrix.env) }}
        working-directory: terraform/${{ matrix.env }}/infra
        run: terraform apply -auto-approve -var-file=terraform.tfvars
